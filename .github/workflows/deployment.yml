# Next.js 프로젝트를 AWS S3에 배포하고 CloudFront를 갱신하는 워크플로우
name: Deploy Next.js to S3 and invalidate CloudFront

# 워크플로우 트리거 조건 설정
on:
  push:
    branches:
      - main # main 브랜치에 push될 때 실행
  workflow_dispatch: # 수동으로 워크플로우 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest # Ubuntu 최신 버전에서 실행
    
    steps:
    # 1. 소스 코드 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Node.js 환경 설정
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "18.x" # Node.js 18 버전 사용

    # 3. 프로젝트 의존성 설치
    - name: Install dependencies
      run: npm ci # clean install 실행

     # 4. Next.js 프로젝트 빌드
    - name: Build
      run: npm run build

    # 5. AWS 인증 정보 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

     # 6. S3에 빌드된 파일 업로드
    - name: Deploy to S3
      run: |
        aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

    # 7. CloudFront 캐시 무효화
    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"